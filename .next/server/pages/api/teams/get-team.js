"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/teams/get-team";
exports.ids = ["pages/api/teams/get-team"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "(api)/./lib/prisma.js":
/*!***********************!*\
  !*** ./lib/prisma.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n// lib/prisma.ts\n\nlet PrismaDB;\nif (false) {} else {\n    if (!global.prisma) {\n        global.prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n    }\n    PrismaDB = global.prisma;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PrismaDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdCQUFnQjtBQUNzQztBQUV0RCxJQUFJRSxRQUFRO0FBRVosSUFBSUMsS0FBcUMsRUFBRSxFQUUxQyxNQUFNO0lBQ0wsSUFBSSxDQUFDQyxNQUFNLENBQUNKLE1BQU0sRUFBRTtRQUNsQkksTUFBTSxDQUFDSixNQUFNLEdBQUcsSUFBSUMsd0RBQVksRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFDREMsUUFBUSxHQUFHRSxNQUFNLENBQUNKLE1BQU0sQ0FBQztBQUMzQixDQUFDO0FBRUQsaUVBQWVFLFFBQVEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2plY3RvcmF0ZS8uL2xpYi9wcmlzbWEuanM/NzUxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsaWIvcHJpc21hLnRzXHJcbmltcG9ydCB7IHByaXNtYSwgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XHJcblxyXG5sZXQgUHJpc21hREI7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgUHJpc21hREIgPSBuZXcgUHJpc21hQ2xpZW50KCk7XHJcbn0gZWxzZSB7XHJcbiAgaWYgKCFnbG9iYWwucHJpc21hKSB7XHJcbiAgICBnbG9iYWwucHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpO1xyXG4gIH1cclxuICBQcmlzbWFEQiA9IGdsb2JhbC5wcmlzbWE7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFByaXNtYURCO1xyXG4iXSwibmFtZXMiOlsicHJpc21hIiwiUHJpc21hQ2xpZW50IiwiUHJpc21hREIiLCJwcm9jZXNzIiwiZ2xvYmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.js\n");

/***/ }),

/***/ "(api)/./pages/api/teams/get-team.js":
/*!*************************************!*\
  !*** ./pages/api/teams/get-team.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/prisma */ \"(api)/./lib/prisma.js\");\n\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    console.log(\"Get single Team End-point hit!\");\n    const { teamId  } = req.query;\n    if (!teamId) {\n        return res.status(500).json({\n            message: \"TeamId is required!\"\n        });\n    }\n    try {\n        //** get tickets status to evaluate the tickets query */\n        const TicketsStatus = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].TicketStatus.findMany({});\n        const allTickets = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tickets.count({\n            where: {\n                teamId: parseInt(teamId)\n            }\n        });\n        //** get tickets individually for specified project */\n        const todoTickets = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tickets.count({\n            where: {\n                AND: [\n                    {\n                        teamId: parseInt(teamId)\n                    },\n                    {\n                        TicketStatus: {\n                            id: TicketsStatus.find((t)=>t.title === \"Todo\")?.id\n                        }\n                    }, \n                ]\n            }\n        });\n        const inProgressTickets = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tickets.count({\n            where: {\n                AND: [\n                    {\n                        teamId: parseInt(teamId)\n                    },\n                    {\n                        TicketStatus: {\n                            id: TicketsStatus.find((t)=>t.title === \"In-progress\")?.id\n                        }\n                    }, \n                ]\n            }\n        });\n        const doneTickets = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tickets.count({\n            where: {\n                AND: [\n                    {\n                        teamId: parseInt(teamId)\n                    },\n                    {\n                        TicketStatus: {\n                            id: TicketsStatus.find((t)=>t.title === \"Done\")?.id\n                        }\n                    }, \n                ]\n            }\n        });\n        const resolvedTickets = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tickets.count({\n            where: {\n                AND: [\n                    {\n                        teamId: parseInt(teamId)\n                    },\n                    {\n                        TicketStatus: {\n                            id: TicketsStatus.find((t)=>t.title === \"Resolved\")?.id\n                        }\n                    }, \n                ]\n            }\n        });\n        const testedTickets = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tickets.count({\n            where: {\n                AND: [\n                    {\n                        teamId: parseInt(teamId)\n                    },\n                    {\n                        TicketStatus: {\n                            id: TicketsStatus.find((t)=>t.title === \"Tested but not resolved\")?.id\n                        }\n                    }, \n                ]\n            }\n        });\n        const holdTickets = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tickets.count({\n            where: {\n                AND: [\n                    {\n                        teamId: parseInt(teamId)\n                    },\n                    {\n                        TicketStatus: {\n                            id: TicketsStatus.find((t)=>t.title === \"On Hold\")?.id\n                        }\n                    }, \n                ]\n            }\n        });\n        const data = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Teams.findUnique({\n            where: {\n                id: parseInt(teamId)\n            },\n            include: {\n                project: true\n            }\n        });\n        if (data) {\n            res.status(200).json({\n                data,\n                Tickets: {\n                    all: allTickets,\n                    todo: todoTickets,\n                    inProgress: inProgressTickets,\n                    done: doneTickets,\n                    resolved: resolvedTickets,\n                    tested: testedTickets,\n                    hold: holdTickets\n                }\n            });\n        } else {\n            res.status(404).json({\n                error: 404,\n                message: \"Team not found\"\n            });\n        }\n    } catch (error) {\n        console.log(\"Error while getting single Team at backend: \", error);\n        return res.status(422).json({\n            error: \"Error while getting single Team at backend: \",\n            error\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/teams/get-team.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/teams/get-team.js"));
module.exports = __webpack_exports__;

})();