"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/projects/assign-project-to-employee";
exports.ids = ["pages/api/projects/assign-project-to-employee"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "handlebars":
/*!*****************************!*\
  !*** external "handlebars" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("handlebars");

/***/ }),

/***/ "nodemailer":
/*!*****************************!*\
  !*** external "nodemailer" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("nodemailer");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "(api)/./client/emails.js":
/*!**************************!*\
  !*** ./client/emails.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NewUserOnBoardEmail\": () => (/* binding */ NewUserOnBoardEmail),\n/* harmony export */   \"UserAssignedToProject\": () => (/* binding */ UserAssignedToProject),\n/* harmony export */   \"UserAssignedToTeam\": () => (/* binding */ UserAssignedToTeam),\n/* harmony export */   \"UserRevokedAccessEmail\": () => (/* binding */ UserRevokedAccessEmail)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"nodemailer\");\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nodemailer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! handlebars */ \"handlebars\");\n/* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(handlebars__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst from = \"support@projectorate.org\";\nconst subjects = {\n    userOnBoard: \"Projectorate - Welcome to the Team\",\n    userRevokedAccess: \"Projectorate - Revoked acess to the system\",\n    UserAssignedToProject: \"Projectorate - Assigned to a project\",\n    UserAssignedToTeam: \"Projectorate - Assigned to a team\"\n};\n// let transporter = nodemailer.createTransport({\n//   service: \"gmail\",\n//   auth: {\n//     type: \"OAuth2\",\n//     user: process.env.MAIL_USERNAME,\n//     pass: process.env.MAIL_PASSWORD,\n//     clientId: process.env.OAUTH_CLIENTID,\n//     clientSecret: process.env.OAUTH_CLIENT_SECRET,\n//     refreshToken: process.env.OAUTH_REFRESH_TOKEN,\n//   },\n// });\nlet transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0___default().createTransport({\n    host: \"mail.privateemail.com\",\n    port: 587,\n    auth: {\n        user: \"support@projectorate.org\",\n        pass: process.env.EMAIL_PASS\n    }\n});\nconst NewUserOnBoardEmail = (reciever, username, password)=>{\n    try {\n        const __dirname = path__WEBPACK_IMPORTED_MODULE_3___default().resolve();\n        const filePath = path__WEBPACK_IMPORTED_MODULE_3___default().join(__dirname, \"/Templates/WelcomeToTeam.html\");\n        const source = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(filePath, \"utf-8\").toString();\n        const template = handlebars__WEBPACK_IMPORTED_MODULE_1___default().compile(source);\n        const replacements = {\n            username: username,\n            password: password\n        };\n        const htmlToSend = template(replacements);\n        transporter.sendMail({\n            from: from,\n            to: reciever,\n            subject: subjects.userOnBoard,\n            html: htmlToSend\n        }, function(err, data) {\n            if (err) {\n                console.log(\"Error \" + err);\n            } else {\n                console.log(\"Email sent successfully to the new user: \" + username);\n            }\n        });\n    } catch (error) {\n        console.log(\"Error while sending email: \" + error);\n    }\n};\nconst UserRevokedAccessEmail = (reciever, username)=>{\n    try {\n        const __dirname = path__WEBPACK_IMPORTED_MODULE_3___default().resolve();\n        const filePath = path__WEBPACK_IMPORTED_MODULE_3___default().join(__dirname, \"/Templates/UserRevokedAccess.html\");\n        const source = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(filePath, \"utf-8\").toString();\n        const template = handlebars__WEBPACK_IMPORTED_MODULE_1___default().compile(source);\n        const replacements = {\n            username: username\n        };\n        const htmlToSend = template(replacements);\n        transporter.sendMail({\n            from: from,\n            to: reciever,\n            subject: subjects.userRevokedAccess,\n            html: htmlToSend\n        }, function(err, data) {\n            if (err) {\n                console.log(\"Error \" + err);\n            } else {\n                console.log(\"Email sent successfully to the new user: \" + username);\n            }\n        });\n    } catch (error) {\n        console.log(\"Error while sending email: \" + error);\n    }\n};\nconst UserAssignedToProject = (reciever, username, projectName, projectDomain)=>{\n    try {\n        const __dirname = path__WEBPACK_IMPORTED_MODULE_3___default().resolve();\n        const filePath = path__WEBPACK_IMPORTED_MODULE_3___default().join(__dirname, \"/Templates/UserAssignedToProject.html\");\n        const source = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(filePath, \"utf-8\").toString();\n        const template = handlebars__WEBPACK_IMPORTED_MODULE_1___default().compile(source);\n        const replacements = {\n            username: username,\n            projectName: projectName,\n            projectDomain: projectDomain\n        };\n        const htmlToSend = template(replacements);\n        transporter.sendMail({\n            from: from,\n            to: reciever,\n            subject: subjects.UserAssignedToProject,\n            html: htmlToSend\n        }, function(err, data) {\n            if (err) {\n                console.log(\"Error \" + err);\n            } else {\n                console.log(\"Email sent successfully to the new user: \" + username);\n            }\n        });\n    } catch (error) {\n        console.log(\"Error while sending email: \" + error);\n    }\n};\nconst UserAssignedToTeam = (reciever, username, teamName, teamDomain, projectName)=>{\n    try {\n        const __dirname = path__WEBPACK_IMPORTED_MODULE_3___default().resolve();\n        const filePath = path__WEBPACK_IMPORTED_MODULE_3___default().join(__dirname, \"/Templates/UserAssignedToTeam.html\");\n        const source = fs__WEBPACK_IMPORTED_MODULE_2___default().readFileSync(filePath, \"utf-8\").toString();\n        const template = handlebars__WEBPACK_IMPORTED_MODULE_1___default().compile(source);\n        const replacements = {\n            username: username,\n            projectName: projectName,\n            teamDomain: teamDomain,\n            teamName: teamName\n        };\n        const htmlToSend = template(replacements);\n        transporter.sendMail({\n            from: from,\n            to: reciever,\n            subject: subjects.UserAssignedToTeam,\n            html: htmlToSend\n        }, function(err, data) {\n            if (err) {\n                console.log(\"Error \" + err);\n            } else {\n                console.log(\"Email sent successfully to the new user: \" + username);\n            }\n        });\n    } catch (error) {\n        console.log(\"Error while sending email: \" + error);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./client/emails.js\n");

/***/ }),

/***/ "(api)/./lib/prisma.js":
/*!***********************!*\
  !*** ./lib/prisma.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n// lib/prisma.ts\n\nlet PrismaDB;\nif (false) {} else {\n    if (!global.prisma) {\n        global.prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n    }\n    PrismaDB = global.prisma;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PrismaDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdCQUFnQjtBQUNzQztBQUV0RCxJQUFJRSxRQUFRO0FBRVosSUFBSUMsS0FBcUMsRUFBRSxFQUUxQyxNQUFNO0lBQ0wsSUFBSSxDQUFDQyxNQUFNLENBQUNKLE1BQU0sRUFBRTtRQUNsQkksTUFBTSxDQUFDSixNQUFNLEdBQUcsSUFBSUMsd0RBQVksRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFDREMsUUFBUSxHQUFHRSxNQUFNLENBQUNKLE1BQU0sQ0FBQztBQUMzQixDQUFDO0FBRUQsaUVBQWVFLFFBQVEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2plY3RvcmF0ZS8uL2xpYi9wcmlzbWEuanM/NzUxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsaWIvcHJpc21hLnRzXHJcbmltcG9ydCB7IHByaXNtYSwgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XHJcblxyXG5sZXQgUHJpc21hREI7XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgUHJpc21hREIgPSBuZXcgUHJpc21hQ2xpZW50KCk7XHJcbn0gZWxzZSB7XHJcbiAgaWYgKCFnbG9iYWwucHJpc21hKSB7XHJcbiAgICBnbG9iYWwucHJpc21hID0gbmV3IFByaXNtYUNsaWVudCgpO1xyXG4gIH1cclxuICBQcmlzbWFEQiA9IGdsb2JhbC5wcmlzbWE7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFByaXNtYURCO1xyXG4iXSwibmFtZXMiOlsicHJpc21hIiwiUHJpc21hQ2xpZW50IiwiUHJpc21hREIiLCJwcm9jZXNzIiwiZ2xvYmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.js\n");

/***/ }),

/***/ "(api)/./pages/api/projects/assign-project-to-employee.js":
/*!**********************************************************!*\
  !*** ./pages/api/projects/assign-project-to-employee.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _client_emails__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../client/emails */ \"(api)/./client/emails.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/prisma */ \"(api)/./lib/prisma.js\");\n\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    console.log(\"Assign project to employee End-point hit!\");\n    const { userId , projectId , ownerId  } = req.query;\n    if (!userId || !projectId || !ownerId) {\n        return res.status(500).json({\n            message: \"ProjectId, ownerId and UserId are both required!\"\n        });\n    }\n    const LogsOperations = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].LogsOperations.findMany({});\n    try {\n        const project = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].project.findUnique({\n            where: {\n                id: parseInt(projectId)\n            },\n            include: {\n                projectDomain: true\n            }\n        }).then((result)=>{\n            if (!result) {\n                res.status(404).json({\n                    error: 404,\n                    type: \"Project\",\n                    message: \"Project does not exist!\"\n                });\n            } else {\n                return result;\n            }\n        }).catch((err)=>{\n            console.log(err);\n        });\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].employee.findUnique({\n            where: {\n                id: parseInt(userId)\n            }\n        }).then((result)=>{\n            if (!result) {\n                res.status(404).json({\n                    error: 404,\n                    type: \"Employee\",\n                    message: \"Employee does not exist!\"\n                });\n            } else {\n                return result;\n            }\n        }).catch((err)=>{\n            console.log(err);\n        });\n        const checkForExsistance = _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].userProjects.findUnique({\n            where: {\n                project_id_employee_id: {\n                    project_id: parseInt(projectId),\n                    employee_id: parseInt(userId)\n                }\n            }\n        }).then((result)=>{\n            if (result) {\n                res.status(403).json({\n                    message: \"Employee is already added to the project\"\n                });\n            } else {\n                const data = _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].userProjects.create({\n                    data: {\n                        project_id: parseInt(projectId),\n                        employee_id: parseInt(userId)\n                    }\n                }).then(async (result)=>{\n                    if (result) {\n                        //record log\n                        try {\n                            const response = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Logs.create({\n                                data: {\n                                    operation: \"Assigned to Project\",\n                                    description: \"Assigned to Project during the assigning phase\",\n                                    project_name: project.project_name,\n                                    employee_name: user.first_name + \" \" + user.last_name,\n                                    user: {\n                                        connect: {\n                                            id: parseInt(ownerId)\n                                        }\n                                    },\n                                    project: {\n                                        connect: {\n                                            id: project.id\n                                        }\n                                    },\n                                    employee: {\n                                        connect: {\n                                            id: user.id\n                                        }\n                                    },\n                                    LogsOperations: {\n                                        connect: {\n                                            id: LogsOperations.find((t)=>t.title === \"Assigned to Project\")?.id\n                                        }\n                                    }\n                                }\n                            });\n                        } catch (error) {\n                            console.log(\"Error while creating log for assigning user to project: \", error);\n                        }\n                        //send email\n                        // console.log(project);\n                        try {\n                            (0,_client_emails__WEBPACK_IMPORTED_MODULE_0__.UserAssignedToProject)(user.email, user.first_name, project.project_name, project.projectDomain.title);\n                        } catch (error1) {\n                            console.log(error1);\n                        }\n                        res.status(200).json({\n                            result\n                        });\n                    } else {\n                        res.status(500).json({\n                            message: \"Some problem Occoured while assigning user to a project!\"\n                        });\n                    }\n                }).catch((err)=>{\n                    console.log(err);\n                    res.status(500).json({\n                        error: \"Error Occoured\",\n                        message: err.message\n                    });\n                });\n            }\n        });\n    } catch (error) {\n        console.log(\"Error while Assigning project to employee at backend: \", error);\n        return res.status(422).json({\n            error: \"Error while Assigning project to employee at backend: \",\n            error\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/projects/assign-project-to-employee.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/projects/assign-project-to-employee.js"));
module.exports = __webpack_exports__;

})();